mixin format_date(date)
  if date != null
    =date.getDate() + "/" + (date.getMonth()+1) +  "/" + date.getFullYear()


mixin format_datetime(date)
  if date != null
    - hours = date.getHours();
    - minutes = date.getMinutes();
    - seconds = date.getSeconds();
    //- force format into 2 digit
    - seconds = ("0" + seconds).slice(-2)

    - ampm = hours >= 12 ? 'PM' : 'AM';
    - hours = hours % 12;
    - hours = hours ? hours : 12; // the hour '0' should be '12'
    - minutes = minutes < 10 ? '0'+minutes : minutes;
    - strTime = hours + ':' + minutes + ':' + seconds + ampm;
    =date.getDate() + "/" + (date.getMonth()+1) +  "/" + date.getFullYear() + "  " + strTime


mixin format_time_from_seconds(seconds)
    - hh = Math.floor(seconds / 60 / 60)
    - seconds -= hh * 60 * 60
    - mm = Math.floor(seconds / 60)
    - seconds -= mm * 60
    - ss = seconds
    - result = ''
    if hh!= 0
      - result += hh + ' hours '
    if mm!= 0
      - result += mm + ' minutes '
    if ss!= 0
      - result += ss + ' seconds'
    =result

mixin time_diff(date1, date2)
  if date1 != null && date2 != null
    - msec = (date2 - date1)
    - hh = Math.floor(msec / 1000 / 60 / 60)
    - msec -= hh * 1000 * 60 * 60
    - mm = Math.floor(msec / 1000 / 60)
    - msec -= mm * 1000 * 60
    - ss = Math.floor(msec / 1000)
    - msec -= ss * 1000
    - result = ''
    if hh!= 0
      - result += hh + ' hours '
    if mm!= 0
      - result += mm + ' minutes '
    if ss!= 0
      - result += ss + ' seconds'
    =result

mixin titleize(text)
  if ((text != null) && (typeof(text) != 'undefined'))
    =text.toLowerCase().replace(/\b\w/g, l => l.toUpperCase())

mixin convert_to_thousand(num)
  = (num * 1000).toLocaleString()

mixin format_number(num)
  = num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")

mixin render_date_input(name, date)
  input.form-control(type="date", name=name, value=(date ? moment(date).format('YYYY-MM-DD') : ''))


mixin dig(object, nestedAttributes)
  // nestedAttributes can be either string 'a.b.c' or array ['a', 'b', 'c']
  // convert the string to array
  if (typeof nestedAttributes == 'string')
    - nestedAttributes = nestedAttributes.split('.')
  - result = true
  for attr in nestedAttributes
    if (!object[attr])
      - result = false
      - return

    - object = object[attr]

  if result
    = object
