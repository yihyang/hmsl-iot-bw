extends ./../../../layouts/default
include ./../../../shared/mixins


block header_content
  script(src='/assets/datatables.net/js/jquery.dataTables.min.js')
  script(src='/assets/datatables.net-bs4/js/dataTables.bootstrap4.min.js')
  link(rel='stylesheet' href='/assets/datatables.net-bs4/css/dataTables.bootstrap4.min.css')

block content
  .container-fluid
    .row
      .col
        a.btn.btn-link.my-2(href="/portal")
          i.fa.fa-arrow-left
          | &nbsp;Back to Home Page

    .row.my-3
      .col
        h2 PO Records

    .row
      .col
        a.btn.btn-primary(href="/po-records/new")
          i.fa.fa-plus-circle
          | &nbsp;Add new PO Record

      .col.text-right
        input#file-upload(type="file", accept=".csv")


    .row.mt-4
      .col-md-3.col-sm-6
        input.my-1.form-control(type="text", name="query", placeholder="Search by PO Number or Material Number")
        input.my-1.form-control(type="text", name="daterange", placeholder="Filter by Created At")
        select.my-1.form-control#statusesFilter(name="statuses[]", multiple="multiple")
          option(value="Created") Created
          option(value="In Progress") In Progress
          option(value="Ended") Ended

    .row.mt-3
      .col
        table.table.table-responsive.dataTableIndex
          tr
            th id
            th Uploaded By
            th Status
            th PO Number
            th Material Number
            th Material Description
            th Target Quantity (g)
            th Input Quantity (g)
            th Produced Quantity (g)
            th Target Completion Date
            th Created At
            th Start Time
            th End Time
          tbody

  include ./../../../shared/js-utilities
  script.
    $('#file-upload').on('change', function() {
      // The Javascript
      var fileInput = document.getElementById('file-upload');
      var file = fileInput.files[0];
      var formData = new FormData();
      formData.append('file', file);

      var xhr = new XMLHttpRequest();
      // Add any event handlers here...
      xhr.open('POST', '/po-records/shortfall', true);
      xhr.send(formData)

      xhr.onreadystatechange = function() {
        if (xhr.readyState == XMLHttpRequest.DONE) {
          if (xhr.status === 200) {
            location.reload();
          }
        }
      }
    })

    //- statuses picker
    $('#statusesFilter').select2({
       placeholder: "Filter by Statuses",
    });

    $('#statusesFilter').on('change', () => {
      dataTable.draw()
    })


    //- daterangepicker
    $('input[name="daterange"]').daterangepicker({
      //- autoUpdateInput: false,
      maxDate: new Date(),
      startDate: moment().subtract(1, 'week'),
      locale: {
        format: 'YYYY/MM/DD'
      }
    })
    $('input[name="daterange"]').on('apply.daterangepicker', function(ev, picker) {
      dataTable.draw()
      $(this).val(picker.startDate.format('YYYY/MM/DD') + ' - ' + picker.endDate.format('YYYY/MM/DD'));
    });

    $('input[name="daterange"]').on('cancel.daterangepicker', function (ev, picker) {
      $(this).val('')
      dataTable.draw()
    })

    //- datatable
    let dataTable = $('.dataTableIndex').DataTable({
        "order": [],
        "procesing": true,
        "serverSide": true,
        "searching": false,
        "ajax": {
          "url": "/po-records/index-search",
          "data": function(data){
            delete data.columns;
            let datepicker = $('input[name="daterange"]').data('daterangepicker');

            if (!!$('input[name="daterange"]').val()) {
              data['startDate'] = datepicker.startDate.format('YYYY-MM-DD')
              data['endDate'] = datepicker.endDate.format('YYYY-MM-DD')
            }

            if ($('#statusesFilter').val()) {
              data['statuses'] = $('#statusesFilter').val()
            }

            data['query'] = $('input[name="query"]').val();

            return data;
          }
        },
        "columns": [
          {
            title: 'ID',
            name: 'id',
            render: function(data, type, full, meta) {
              return '<a href="/po-records/' + full['id'] + '">' + full['id'] + '</a>';
            },
            orderable: false,
          },
          {
            title: 'Uploaded By',
            data: 'uploaded_by',
            orderable: false,
          },
          {
            title: 'Status',
            data: 'status',
            orderable: false,
          },
          {
            title: 'PO Number',
            data: 'po_number',
            orderable: false,
          },
          {
            title: 'Material Number',
            data: 'material_number',
            orderable: false,
          },
          {
            title: 'Material Description',
            data: 'material_description',
            orderable: false,
          },
          {
            title: 'Target Quantity',
            data: 'target_quantity',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              if (data) {
                return formatNumberToThousand(data);
              }
            }
          },
          {
            title: 'Input Quantity',
            data: 'input_quantity',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              if (data) {
                return formatNumberToThousand(data);
              }
            }
          },
          {
            title: 'Produced Quantity',
            data: 'produced_quantity',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              if (data) {
                return formatNumberToThousand(data);
              }
            }
          },
          {
            title: 'Target Completion Date',
            data: 'target_completion_date',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              if (data) {
                return moment(data).format('YYYY-MM-DD');
              }
            }
          },
          {
            title: 'Created At',
            data: 'created_at',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              return utility_format_datetime(data);
            },
          },
          {
            title: 'Start Time',
            data: 'start_time',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              return utility_format_datetime(data);
            },
          },
          {
            title: 'End Time',
            data: 'end_time',
            orderable: false,
            defaultContent: '',
            render: function(data, type, full, meta) {
              return utility_format_datetime(data);
            },
          },
        ]
      });

      $('input[name="query"]').on('keyup', function() {
        dataTable.draw();
      });

      $('input[name="selectedDateInput"]').on('change', function() {
        dataTable.draw();
      });

      function formatNumberToThousand(num) {
        if (!num) {
          return 0;
        }

        num = num * 1000
        num = (Math.round(num * 100) / 100).toFixed(0);
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      }

